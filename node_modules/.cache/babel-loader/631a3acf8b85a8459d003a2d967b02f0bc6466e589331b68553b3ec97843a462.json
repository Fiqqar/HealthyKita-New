{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid bg-light min-vh-100 d-flex align-items-center justify-content-center py-5\"\n};\nconst _hoisted_2 = {\n  class: \"card shadow-sm\",\n  style: {\n    \"max-width\": \"400px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"card-body p-4\"\n};\nconst _hoisted_4 = {\n  class: \"text-center mb-4\"\n};\nconst _hoisted_5 = {\n  class: \"text-muted\"\n};\nconst _hoisted_6 = {\n  class: \"mb-3\"\n};\nconst _hoisted_7 = {\n  class: \"mb-3\"\n};\nconst _hoisted_8 = {\n  class: \"mb-3 d-flex justify-content-between align-items-center\"\n};\nconst _hoisted_9 = {\n  class: \"form-check me-1\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"text-center\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"text-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", {\n    class: \"fw-bold\"\n  }, \"Login\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_5, [_cache[5] || (_cache[5] = _createTextVNode(\" Atau \")), _createVNode(_component_router_link, {\n    to: \"/register\",\n    class: \"text-success text-decoration-none\"\n  }, {\n    default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\" Buat Akun Baru \")])),\n    _: 1 /* STABLE */\n  })])]), _createElementVNode(\"div\", _hoisted_6, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"username\",\n    class: \"form-label\"\n  }, \"Username\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"username\",\n    required: \"\",\n    placeholder: \"Masukkan nama mu\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.loginData.username = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.loginData.username]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"password\",\n    class: \"form-label\"\n  }, \"Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"password\",\n    required: \"\",\n    placeholder: \"Masukkan Password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.loginData.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.loginData.password]])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-check-input border-success cekboks\",\n    type: \"checkbox\",\n    id: \"remember-me\",\n    value: \"true\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.loginData.rememberMe = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.loginData.rememberMe]]), _cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    class: \"form-check-label\",\n    for: \"remember-me\"\n  }, \" Remember me \", -1 /* HOISTED */))]), _cache[10] || (_cache[10] = _createElementVNode(\"a\", {\n    href: \"#\",\n    class: \"text-success text-decoration-none\"\n  }, \"Lupa password?\", -1 /* HOISTED */))]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-success w-100 animate\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.loginMethods && $options.loginMethods(...args))\n  }, \" Login \"), $data.success ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_10, \"berhasil\")) : _createCommentVNode(\"v-if\", true), $data.error ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_11, \"error\")) : _createCommentVNode(\"v-if\", true)])])]);\n}","map":{"version":3,"names":["class","style","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createTextVNode","_createVNode","_component_router_link","to","default","_withCtx","_cache","_","_hoisted_6","for","type","id","required","placeholder","$event","$data","loginData","username","_hoisted_7","password","_hoisted_8","_hoisted_9","value","rememberMe","href","onClick","args","$options","loginMethods","success","_hoisted_10","_createCommentVNode","error","_hoisted_11"],"sources":["C:\\xampp\\htdocs\\Healthy-Kita-1\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-fluid bg-light min-vh-100 d-flex align-items-center justify-content-center py-5\">\r\n        <div class=\"card shadow-sm\" style=\"max-width: 400px;\">\r\n            <div class=\"card-body p-4\">\r\n                <div class=\"text-center mb-4\">\r\n                    <h2 class=\"fw-bold\">Login</h2>\r\n                    <p class=\"text-muted\">\r\n                        Atau\r\n                        <router-link to=\"/register\" class=\"text-success text-decoration-none\">\r\n                            Buat Akun Baru\r\n                        </router-link>\r\n                    </p>\r\n                </div>\r\n\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"username\" class=\"form-label\">Username</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"username\" required placeholder=\"Masukkan nama mu\"\r\n                            v-model=\"loginData.username\" />\r\n                    </div>\r\n\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"password\" class=\"form-label\">Password</label>\r\n                        <input type=\"password\" class=\"form-control\" id=\"password\" required\r\n                            placeholder=\"Masukkan Password\" v-model=\"loginData.password\" />\r\n                    </div>\r\n\r\n                    <div class=\"mb-3 d-flex justify-content-between align-items-center\">\r\n                        <div class=\"form-check me-1\">\r\n                            <input class=\"form-check-input border-success cekboks\" type=\"checkbox\" id=\"remember-me\"\r\n                                value=\"true\" v-model=\"loginData.rememberMe\" />\r\n                            <label class=\"form-check-label\" for=\"remember-me\">\r\n                                Remember me\r\n                            </label>\r\n                        </div>\r\n                        <a href=\"#\" class=\"text-success text-decoration-none\">Lupa password?</a>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" class=\"btn btn-success w-100 animate\" @click=\"loginMethods\">\r\n                        Login\r\n                    </button>\r\n                    <h3 class=\"text-center\" v-if=\"success\">berhasil</h3>\r\n                    <h3 class=\"text-center\" v-if=\"error\">error</h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport textFile from '!!raw-loader!./file.txt';\r\nlet arr;\r\nexport default {\r\n    name: 'LoginPage',\r\n    data() {\r\n        return {\r\n            arr: textFile,\r\n            loginData: {\r\n                username: \"\",\r\n                password: \"\",\r\n                rememberMe: false\r\n            },\r\n            success: false,\r\n            error: false,\r\n            response: {}\r\n        }\r\n    },\r\n    methods: {\r\n        loginMethods() {\r\n            this.success = false;\r\n            this.error = false;\r\n            const { username, password, rememberMe } = this.loginData;\r\n            if (!username || !password) {\r\n                alert(\"Please fill out all required fields.\");\r\n                return;\r\n            }\r\n            axios.post(`${this.arr}/api/login/user`, {\r\n                username: username,\r\n                password: password,\r\n                remember: rememberMe\r\n            }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                withCredentials: true\r\n            })\r\n                .then(response => {\r\n                    this.success = true;\r\n                this.response = response.data;\r\n                this.userData = {\r\n                    username: \"\",\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    confirmpw: \"\"\r\n                };\r\n                this.loading = false;  // Stop loading when request is successful\r\n\r\n                const encKeyFetch = axios.get(`${arr}/oauth/encKey/get`,{\r\n                withCredentials: true\r\n                });\r\n                const encKey = encKeyFetch.data.encKey;\r\n                const ivKey = encKeyFetch.data.ivKey;\r\n                const dbRequest = indexedDB.open('userKeysDB', 1);\r\n\r\n                dbRequest.onupgradeneeded = (event) => {\r\n                    let db = event.target.result;\r\n                    if (!db.objectStoreNames.contains('keys')) {\r\n                        db.createObjectStore('keys', { keyPath: 'id' });\r\n                    }\r\n                };\r\n                dbRequest.onsuccess = (event) => {\r\n                    const db = event.target.result;\r\n                    const transaction = db.transaction('keys', 'readwrite');\r\n                    const store = transaction.objectStore('keys');\r\n                    store.put({ id: 'encKey', value: encKey });\r\n                    store.put({ id: 'ivKey', value: ivKey });\r\n                    transaction.oncomplete = () => {\r\n                        console.log('encKey and ivKey stored successfully');\r\n                    };\r\n                };\r\n\r\n        dbRequest.onerror = (event) => {\r\n            console.error('Error on opening IndexedDB:', event.target.error);\r\n        };\r\n                })\r\n                .catch(error => {\r\n                    this.error = true;\r\n                    console.error(\"There was an error:\", error);\r\n                });\r\n\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.animate {\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.animate:hover {\r\n    transform: scale(1.05);\r\n}\r\n\r\n.animate:active {\r\n    transform: scale(0.95);\r\n}\r\n\r\n.cekboks {\r\n    cursor: pointer;\r\n}\r\n\r\n.card {\r\n    border-radius: 50px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}