{"ast":null,"code":"import axios from 'axios';\nimport textFile from '!!raw-loader!./file.txt';\nexport default {\n  name: 'RegisterPage',\n  data() {\n    return {\n      arr: textFile,\n      userData: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmpw: \"\"\n      },\n      success: false,\n      error: false,\n      loading: false,\n      response: {}\n    };\n  },\n  methods: {\n    registerData() {\n      this.success = false;\n      this.error = false;\n      this.loading = true; // Start loading\n      const {\n        username,\n        email,\n        password,\n        confirmpw\n      } = this.userData;\n      if (!username || !password || !email || !confirmpw) {\n        alert(\"Please fill out all required fields.\");\n        this.loading = false; // Stop loading if validation fails\n        return;\n      }\n      if (password !== confirmpw) {\n        alert(\"Passwords do not match.\");\n        this.loading = false; // Stop loading if passwords don't match\n        return;\n      }\n      axios.post(`${this.arr}/api/signup/user`, {\n        username: username,\n        email: email,\n        password: password\n      }, {\n        withCredentials: true\n      }).then(async response => {\n        this.success = true;\n        this.response = response.data;\n        this.userData = {\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          confirmpw: \"\"\n        };\n        this.loading = false; // Stop loading when request is successful\n      }).catch(error => {\n        console.log(error);\n        this.error = true;\n        this.loading = false; // Stop loading if there's an error\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","textFile","name","data","arr","userData","username","email","password","confirmpw","success","error","loading","response","methods","registerData","alert","post","withCredentials","then","catch","console","log"],"sources":["C:\\xampp\\htdocs\\Healthy-Kita-1\\src\\components\\RegisterPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"d-flex justify-content-center align-items-center vh-100\" style=\"background-color: #f4fdf4;\">\r\n        <div class=\"card shadow-sm\" style=\"width: 24rem; border-radius: 50px;\">\r\n            <div class=\"card-body\">\r\n                <h3 class=\"card-title text-center mb-4\">Register</h3>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"name\" class=\"form-label\">Nama Lengkap</label>\r\n                    <input type=\"text\" id=\"name\" class=\"form-control\" name=\"username\" placeholder=\"Masukkan nama mu\" v-model=\"userData.username\"\r\n                        required>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"email\" class=\"form-label\">Alamat Email</label>\r\n                    <input type=\"email\" id=\"email\" class=\"form-control\"\r\n                        placeholder=\"emailmu@example.com\" name=\"email\" v-model=\"userData.email\" required>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"password\" class=\"form-label\">Password</label>\r\n                    <input type=\"password\" id=\"password\" class=\"form-control\"\r\n                        placeholder=\"Masukkan Password\" name=\"password\" v-model=\"userData.password\" required>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"confirmPassword\" class=\"form-label\">Konfirmasi Password</label>\r\n                    <input type=\"password\" id=\"confirmPassword\" class=\"form-control\"\r\n                        placeholder=\"Konfirmasi Password\" name=\"confirmpw\" v-model=\"userData.confirmpw\" required>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-success w-100 animate\" @click=\"registerData\" :disabled=\"loading\">Register</button>\r\n                <div class=\"text-center mt-3\">\r\n                    <!-- Ikon Google -->\r\n                    <div class=\"text-center\">\r\n                        <a href=\"#\" class=\"social-icon\"><i class=\"fa-brands fa-google\"></i></a>\r\n                    </div>\r\n                    <!-- Login -->\r\n                    <p id=\"login1\">Sudah punya akun? </p><router-link to=\"/login\"\r\n                        class=\"text-success text-decoration-none\" id=\"login\">Login disini</router-link>\r\n                </div>\r\n            </div>\r\n            <div v-if=\"loading\" class=\"text-center\">\r\n                <p>harap tunggu...</p>\r\n            </div>\r\n            <h3 class=\"text-center\" v-if=\"success && !loading\">{{ response.message }}</h3>\r\n            <h3 class=\"text-center\" v-if=\"error && !loading\">{{ response.message }}</h3>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport textFile from '!!raw-loader!./file.txt';\r\nexport default {\r\n    name: 'RegisterPage',\r\n    data() {\r\n        return {\r\n            arr: textFile,\r\n            userData: {\r\n                username: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                confirmpw: \"\"\r\n            },\r\n            success: false,\r\n            error: false,\r\n            loading: false,\r\n            response: {}\r\n        };\r\n    },\r\n    methods: {\r\n        registerData() {\r\n            this.success = false;\r\n            this.error = false;\r\n            this.loading = true;  // Start loading\r\n            const { username, email, password, confirmpw } = this.userData;\r\n            if (!username || !password || !email || !confirmpw){\r\n                alert(\"Please fill out all required fields.\");\r\n                this.loading = false;  // Stop loading if validation fails\r\n                return;\r\n            }\r\n            if (password !== confirmpw) {\r\n                alert(\"Passwords do not match.\");\r\n                this.loading = false;  // Stop loading if passwords don't match\r\n                return;\r\n            }\r\n            axios.post(`${this.arr}/api/signup/user`, {\r\n                username: username,\r\n                email: email,\r\n                password: password,  \r\n            },{withCredentials:true\r\n})\r\n            \r\n            .then(async (response) => {\r\n                this.success = true;\r\n                this.response = response.data;\r\n                this.userData = {\r\n                    username: \"\",\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    confirmpw: \"\"\r\n                };\r\n                this.loading = false;  // Stop loading when request is successful\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                this.error = true;\r\n                this.loading = false;  // Stop loading if there's an error\r\n            });   \r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#login1 {\r\n    color: black;\r\n    text-decoration: none;\r\n    font-size: 14px;\r\n    margin-top: 5px;\r\n    display: inline-block;\r\n    margin-bottom: 10px;\r\n    margin-left: 2px;\r\n    margin-right: 5px;\r\n}\r\n\r\n#login {\r\n    font-size: 14px;\r\n    display: inline-block;\r\n    transition: color 0.3s ease-in-out;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n#login:hover {\r\n    color: #357ab8;\r\n}\r\n\r\n.animate {\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.animate:hover {\r\n    transform: scale(1.05);\r\n}\r\n\r\n.animate:active {\r\n    transform: scale(0.95);\r\n}\r\n</style>\r\n"],"mappings":"AA8CA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,QAAO,MAAO,yBAAyB;AAC9C,eAAe;EACXC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,GAAG,EAAEH,QAAQ;MACbI,QAAQ,EAAE;QACNC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE;MACf,CAAC;MACDC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,KAAK;MACZC,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAE,CAAC;IACf,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,YAAYA,CAAA,EAAG;MACX,IAAI,CAACL,OAAM,GAAI,KAAK;MACpB,IAAI,CAACC,KAAI,GAAI,KAAK;MAClB,IAAI,CAACC,OAAM,GAAI,IAAI,EAAG;MACtB,MAAM;QAAEN,QAAQ;QAAEC,KAAK;QAAEC,QAAQ;QAAEC;MAAU,IAAI,IAAI,CAACJ,QAAQ;MAC9D,IAAI,CAACC,QAAO,IAAK,CAACE,QAAO,IAAK,CAACD,KAAI,IAAK,CAACE,SAAS,EAAC;QAC/CO,KAAK,CAAC,sCAAsC,CAAC;QAC7C,IAAI,CAACJ,OAAM,GAAI,KAAK,EAAG;QACvB;MACJ;MACA,IAAIJ,QAAO,KAAMC,SAAS,EAAE;QACxBO,KAAK,CAAC,yBAAyB,CAAC;QAChC,IAAI,CAACJ,OAAM,GAAI,KAAK,EAAG;QACvB;MACJ;MACAZ,KAAK,CAACiB,IAAI,CAAC,GAAG,IAAI,CAACb,GAAG,kBAAkB,EAAE;QACtCE,QAAQ,EAAEA,QAAQ;QAClBC,KAAK,EAAEA,KAAK;QACZC,QAAQ,EAAEA;MACd,CAAC,EAAC;QAACU,eAAe,EAAC;MAC/B,CAAC,EAEYC,IAAI,CAAC,MAAON,QAAQ,IAAK;QACtB,IAAI,CAACH,OAAM,GAAI,IAAI;QACnB,IAAI,CAACG,QAAO,GAAIA,QAAQ,CAACV,IAAI;QAC7B,IAAI,CAACE,QAAO,GAAI;UACZC,QAAQ,EAAE,EAAE;UACZC,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE,EAAE;UACZC,SAAS,EAAE;QACf,CAAC;QACD,IAAI,CAACG,OAAM,GAAI,KAAK,EAAG;MAC3B,CAAC,EACAQ,KAAK,CAAET,KAAK,IAAK;QACdU,OAAO,CAACC,GAAG,CAACX,KAAK,CAAC;QAClB,IAAI,CAACA,KAAI,GAAI,IAAI;QACjB,IAAI,CAACC,OAAM,GAAI,KAAK,EAAG;MAC3B,CAAC,CAAC;IACN;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}